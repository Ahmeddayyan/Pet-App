name: Build and Deploy PurrfectMatch

on:
  push:
    branches:
      - main

jobs:
  build-deploy:
    runs-on: self-hosted
    env:
      DOCKER_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKERHUB_TOKEN }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker to use Minikube's environment (Windows)
        shell: powershell
        run: |
          echo "Configuring Docker to use Minikube's daemon..."
          & minikube -p minikube docker-env | Invoke-Expression

      - name: Build Backend Docker Image
        shell: powershell
        run: |
          docker build -t "$env:DOCKER_USERNAME/purrfectmatch-js-backend:latest" ./backend

      - name: Build Frontend Docker Image
        shell: powershell
        run: |
          docker build -t "$env:DOCKER_USERNAME/purrfectmatch-js-frontend:latest" ./frontend

      - name: Login to Docker Hub
        shell: powershell
        run: |
          docker login -u "$env:DOCKER_USERNAME" -p "$env:DOCKER_PASSWORD"

      - name: Push Backend Image to Docker Hub
        shell: powershell
        run: docker push "$env:DOCKER_USERNAME/purrfectmatch-js-backend:latest"

      - name: Push Frontend Image to Docker Hub
        shell: powershell
        run: docker push "$env:DOCKER_USERNAME/purrfectmatch-js-frontend:latest"

      - name: Update Kubernetes manifests with correct image names
        shell: powershell
        run: |
          (Get-Content -Path kubernetes/backend/deployment.yml) -replace 'farazhayder/purrfectmatch-js-backend', "$env:DOCKER_USERNAME/purrfectmatch-js-backend" | Set-Content -Path kubernetes/backend/deployment.yml
          (Get-Content -Path kubernetes/frontend/deployment.yml) -replace 'farazhayder/purrfectmatch-js-frontend', "$env:DOCKER_USERNAME/purrfectmatch-js-frontend" | Set-Content -Path kubernetes/frontend/deployment.yml

      - name: Deploy to Kubernetes
        shell: powershell
        run: |
          kubectl apply -f kubernetes/backend/deployment.yml
          kubectl apply -f kubernetes/backend/service.yml
          kubectl apply -f kubernetes/frontend/deployment.yml
          kubectl apply -f kubernetes/frontend/service.yml
